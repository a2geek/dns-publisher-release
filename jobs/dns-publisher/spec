---
name: dns-publisher

templates:
  ctl.erb: bin/ctl
  config.json.erb: config/config.json

packages:
- dns-publisher

properties:
  log-level:
    description: "Logging level. Allowed values are: NONE, ERROR, WARN, INFO, DEBUG"
    default: "info"

  bosh-dns.trigger.type:
    description: "Trigger type. Currently supported are file-watcher and timer."
    default: "file-watcher"
  bosh-dns.trigger.file-watcher:
    description: "Trigger a refresh when specified file is updated. This both interrogates/updates the router and BOSH DNS."
    default: "/var/vcap/instance/dns/records.json"
  bosh-dns.trigger.refresh:
    description: "Refresh rate for the DNS query. This both interrogates/updates the router and BOSH DNS. Uses Go Duration notation."
    default: "15m"
  bosh-dns.mappings:
    description: "BOSH DNS mappings to a FQDN"
    example:
    - instance-group: concourse
      deployment: concourse
      fqdns: [concourse.lan]
    - instance-group: router
      deployment: cf
      fqdns: ["*.sys.cf.lan", "*.app.cf.lan"]

  cloud-foundry.trigger.type:
    description: "Trigger type. Currently supported is timer."
    default: "timer"
  cloud-foundry.trigger.refresh:
    description: "Refresh rate for the Cloud Foundry query. This both interrogates/updates the router and Cloud Foundry. Uses Go Duration notation."
    default: "5m"
  cloud-foundry.url:
    description: "Full URL for connecting to Cloud Foundry API."
    example: "https://api.sys.cf.lan"
  cloud-foundry.skip-ssl-validation:
    description: "Disable TLS validation for CF connections."
    default: false
  cloud-foundry.client-id:
    description: "Client ID for connection to Cloud Foundry."
  cloud-foundry.client-secret:
    description: "Client Secret for connection to Cloud Foundry."
  cloud-foundry.alias:
    description: "Alias DNS name to map for URL."
    example: "alias.sys.cf.lan"
  cloud-foundry.mappings:
    description: "List of wildcard URL matches."
    example: '["*.cf.lan"]'

  publisher.type:
    description: "Publisher type. Currently supported are: openwrt and fake."
    default: openwrt
  publisher.dry-run:
    description: "Enable dry-run capabilities. Will connect in a read-only manner and only log the writes that would occur. Must be string."
    default: "true"
  publisher.options:
    description: "Configuration options for publsiher type. Example is for openwrt."
    example:
      user: root
      host: 192.168.1.1
      private-key:
        -----BEGIN RSA PRIVATE KEY-----
        <snip>
        -----END RSA PRIVATE KEY-----
